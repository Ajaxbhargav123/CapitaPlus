@model Capitaplus.ViewModel.VendorMasterModel
@{
    ViewBag.Title = "CreateVendor";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .lbl {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        font-weight: bold;
    }
</style>
<h2>Create Vendor</h2>
@using (@Html.BeginForm("Edit", "Vendor"))
{
    <div class="form-group">
        <div class="container">
            <div class="row">
                <div class="col-lg-6">
                    @*<div class="form-group">
                            @Html.LabelFor(x => x.vendorMaster.VendorCode, new { @class = "lbl" })
                            @Html.TextBoxFor(x => x.vendorMaster.VendorCode, new { @class = "form-control" })
                            @Html.ValidationMessageFor(x => x.vendorMaster.VendorCode)
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(x => x.vendorMaster.VendorName, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.vendorMaster.VendorName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.vendorMaster.VendorName)

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.vendorMaster.SuplierGstNo, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.vendorMaster.SuplierGstNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.vendorMaster.SuplierGstNo)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.vendorMaster.SuplierTypeId, new { @class = "lbl" })
                        @Html.DropDownListFor(x => x.vendorMaster.SuplierTypeId, new SelectList(Model.supplierTypes, "Id", "SuplierType1"), "Select Suplier Types", new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.vendorMaster.SuplierTypeId)

                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.vendorMaster.VendorAddress, new { @class = "lbl" })
                        @Html.TextAreaFor(x => x.vendorMaster.VendorAddress, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.vendorMaster.VendorAddress)
                    </div>


                </div>
                <div class="col-lg-6">


                    <div class="form-group">
                        @Html.LabelFor(x => x.vendorMaster.ContactPerson, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.vendorMaster.ContactPerson, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.vendorMaster.ContactPerson)

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.vendorMaster.ContactNo, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.vendorMaster.ContactNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.vendorMaster.ContactNo)
                    </div>

                    <br />
                    @Html.HiddenFor(c => c.vendorMaster.S_No)
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-lg btn-primary">Save</button>

                </div>
            </div>
        </div>


    </div>

}
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")


}