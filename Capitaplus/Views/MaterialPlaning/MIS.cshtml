@model Capitaplus.ViewModel.JobSheetForMPLanning
<style>

    .table {
        margin-left: -65px;
    }

    .h1 {
        margin-left: -65px;
    }

    .si {
        margin-left: -65px;
    }
</style>

<h2 class="h1">Material Planing</h2>
<table class="table dat">
    <tr>
        <th>
            <label>Sales No</label>
        </th>
        <th>
            <label>Job No</label>
        </th>
        <th>
            <label>BOM No</label>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.saleOrder.ProductCode)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.saleOrder.ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.saleOrder.Model)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.saleOrder.Type)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.saleOrder.Capacity)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.saleOrder.Color)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.saleOrder.Brand)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.saleOrder.QtyTopProduce)
        </th>

        <th>
            Action
        </th>
    </tr>

    @foreach (var item in Model.jobOrders)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.SalesOrderNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.JobNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BomNo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductCode)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Model)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Type)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Capacity)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Color)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Brand)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.QtyTopProduce)
            </td>

            <td>
                <button type="button" id="btnadd" class="btn btn-primary">Add</button>
            </td>
        </tr>
    }

</table>
<hr />

<h2 class="si">Selected Item</h2>
<table class="table tablelist table-striped">
    <thead>
        <tr>
            <th>Sales No</th>
            <th>Job No</th>
            <th>Bom No</th>
            <th>Product Code</th>
            <th>Product Name</th>
            <th>Type</th>
            <th>Capacity</th>
            <th>Color</th>
            <th>Model</th>
            <th>Brand</th>
            <th>Qty To Produce</th>
            @*<th>Requied Qty</th>
                <th>Remaining</th>*@
        </tr>
    </thead>
    <tbody></tbody>
</table>

@*Table Bom*@
<h2 class="si">BOM Items</h2>
<div class="row">
    <table id="tblbom" class="table tablebom table-striped">
        <thead>
            <tr>
                <th>Job No</th>
                <th>Bom No</th>
                <th>Code</th>
                <th>Product Name</th>
                <th>Type</th>
                <th>Capacity</th>
                <th>Color</th>
                <th>Model</th>
                <th>Qty/Pcs</th>
                <th>Requird Qty</th>
                <th>Wastage%</th>
                <th>Qty Req with Wastage</th>
                <th>Qty in stock</th>
                <th>Qty To Purchase</th>

            </tr>
        </thead>
        <tbody></tbody>
    </table>
</div>

<div class="row">
    <div class="col-lg-5">

    </div>
    <div class="col-lg-2">
        <button id="save" class="btn btn-block btn-primary">
            <b style="font-weight:bolder"> Save</b> 
        </button>
    </div>
    <div class="col-lg-5">

    </div>
</div>



@section scripts{
    <script type="text/javascript">
        $(document).ready(function () {
            var ProCode;
            var MrsId;
            var salesId;
            var count = 0;
            $('.tablelist').hide();
            $('#bomlist').hide();
            $('#save').hide();
            $('.si').hide();
            $('.tablebom').hide();
            $('.boml').hide();
            var qtytopro;
            $(document).on('click', '#btnadd', function () {
                $.ajax({
                    url: "/MaterialPlaning/GetLastMrsId",
                    timeout: 20000,
                    type: "GET",
                    ContentType: "application/json; charset=UTF-8",
                    success: function (result) {
                        let i = 1;
                        let val = parseInt(result) + parseInt(i);
                        MrsId = "MPN000" + val;
                    }
                });

                $('.tablelist').show();
                $('.boml').show();
                let code = $(this).closest('tr');
                salesId = $("TD", code).eq(0).html().trim();
                var jobno = $("TD", code).eq(1).html().trim();
                var bomId = $("TD", code).eq(2).html().trim();
                ProCode = $("TD", code).eq(3).html().trim();
                var ProName = $("TD", code).eq(4).html().trim();
                var model = $("TD", code).eq(5).html().trim();
                var type = $("TD", code).eq(6).html().trim();
                var capacity = $("TD", code).eq(7).html().trim();
                var brand = $("TD", code).eq(9).html().trim();
                var color = $("TD", code).eq(8).html().trim();
                qtytopro = $("TD", code).eq(10).html().trim();

                $(".tablelist tbody tr").remove();
                $(".tablelist").each(function () {
                    var tds = '<tr>';
                    jQuery.each($('tr:last', this), function () {
                        tds += '<td class="salesid">' + salesId + '</td>';
                        tds += '<td class="jobid">' + jobno + '</td>';
                        tds += '<td class="bomid">' + bomId + '</td>';
                        tds += '<td class="procode">' + ProCode + '</td>';
                        tds += '<td class="proname">' + ProName + '</td>';
                        tds += '<td class="type">' + type + '</td>';
                        tds += '<td class="capacity">' + capacity + '</td>';
                        tds += '<td class="color">' + color + '</td>';
                        tds += '<td class="model">' + model + '</td>';
                        tds += '<td class="brand">' + brand + '</td>';
                        tds += '<td class="qty">' + qtytopro + '</td>';
                        //tds += '<td class="tqty">' + '<input type="text" id="tqty" class="form-control"/>' + '</td>';
                        //tds += '<td class="remaining">' + '<input type="text" disabled id="remain" class="form-control"/>' + '</td>';

                    });
                    tds += '</tr>';
                    if ($('tbody', this).length > 0) {
                        $('tbody', this).append(tds);
                        $('.tablelist').show();

                        $('.save').show();
                        $('#bomlist').show();
                        $('.si').show();
                    } else {
                        $(this).append(tds);
                    }
                });
                $(".tablebom tbody tr").remove();

                $('.tablebom').show();
                $('.bh').show();

                $.ajax({
                    url: '/JobCard/GetBomDetails',
                    data: { code: bomId },
                    type: 'json',
                    success: function (result) {
                        console.log(result);
                        for (var i = 0; i < result.Data.length; i++) {
                            let rmcode = result.Data[i].RmCode;
                            let matname = result.Data[i].MatName;
                            let type = result.Data[i].Type;
                            let capacity = result.Data[i].Capacity;
                            let color = result.Data[i].Color;
                            let model = result.Data[i].Model;
                            let qty = result.Data[i].Qty;
                            //Qty From Stock
                            $.ajax({
                                url: '/MaterialPlaning/GetStockFromFg',
                                data: { procode: rmcode },
                                type: 'json',
                                success: function (qtys) {
                                    $("#tblbom").each(function () {
                                        var tds = '<tr class="all">';
                                        jQuery.each($('tr:last', this), function () {
                                            tds += '<td class="jobid">' + jobno + '</td>';
                                            tds += '<td class="bomid">' + bomId + '</td>';
                                            tds += '<td class="code">' + rmcode + '</td>';
                                            tds += '<td class="proName">' + matname + '</td>';
                                            tds += '<td class="type">' + type + '</td>';
                                            tds += '<td class="capacity">' + capacity + '</td>';
                                            tds += '<td class="color">' + color + '</td>';
                                            tds += '<td class="model">' + model + '</td>';
                                            tds += '<td class="tqty">' + qty + '</td>';

                                            let reqQty = qtytopro * qty;

                                            tds += '<td class="reqqty">' + '<input type="number" style="width:90px;" value=' + `${reqQty}` + ' disabled id="rqty" class="form-control"/>' + '</td>';
                                            tds += '<td class="reqqty">' + '<input type="number"  id="waste" class="form-control"/>' + '</td>';
                                            tds += '<td class="reqqty">' + '<input type="number" disabled style="width:70px;" id="withwastqty" class="form-control"/>' + '</td>';
                                            tds += '<td class="qtyinstock">' + '<input type="number" value=' + `${qtys}` + ' disabled id="instock" style="width:95px;" class="form-control"/>' + '</td>';

                                            let qtytopur = reqQty - qtys;

                                            if (qtytopur <= 0) {
                                                tds += '<td class="qtytopro">' + '<input type="text" value=' + `${0}` + ' disabled id="qtytopr" style="width:80px;" class="form-control"/>' + '</td>';
                                            } if (qtytopur > 0) {
                                                tds += '<td class="qtytopro">' + '<input type="text" value=' + `${qtytopur}` + ' style="width:90px;" disabled id="qtytopr" class="form-control"/>' + '</td>';

                                            }


                                            $('#save').show();
                                        });
                                        tds += '</tr>';

                                        if ($('tbody', this).length > 0) {
                                            $('tbody', this).append(tds);
                                            $('.table').show();
                                            $('.save').show();
                                            $('#txtcode').val('');
                                            $('#proName').val('');
                                            $('#txtmodel').val('');
                                            $('#txtcell').val('');
                                            $('#txtcapacity').val('');
                                            $('#txtcolor').val('');
                                            $('#txtqtytopro').val('');
                                            //Calculations

                                        } else {
                                            $(this).append(tds);

                                        }
                                    });
                                }
                            })


                        }

                    }
                })
            })

            //KeyUp Events
            $(document).on('keyup', '#tqty', function () {
                let qq = $('#tqty').val();
                var wq = qtytopro - qq;
                $('#remain').val(wq);
            })

            //calculate waste percentage
            $(document).on('keyup', '#waste', function () {
                $(this).closest('tr').find('#qtytopr').val('');
                $(this).closest('tr').find('#withwastqty').val('');

                let reqQty = $(this).closest('tr').find('#rqty').val();
                let qq = parseInt($(this).val());

                let totals = parseFloat(reqQty * qq) / 100;

                $(this).closest('tr').find('#withwastqty').val(Math.ceil(totals) + parseInt(reqQty));

                let QtyWithWaste = $(this).closest('tr').find('#withwastqty').val();
                let stockQty = $(this).closest('tr').find('#instock').val();

                var QtyToPurchase = parseInt(QtyWithWaste) - parseInt(stockQty);


                $(this).closest('tr').find('#qtytopr').val(QtyToPurchase);
            })

            //Save
            $('#save').on('click', function () {

                $("#tblbom tbody").find('tr').each(function (i, el) {
                    var item = {};
                    var $tds = $(this).find('td');
                    item.JobNo = $tds.eq(0).text().trim();
                    item.BomNo = $tds.eq(1).text().trim();
                    item.Code = $tds.eq(2).text().trim();
                    item.MatName = $tds.eq(3).text().trim();
                    item.Type = $tds.eq(4).text().trim();
                    item.Capacity = $tds.eq(5).text().trim();
                    item.Color = $tds.eq(6).text().trim();
                    item.Model = $tds.eq(7).text();
                    item.Qty = $tds.eq(8).text().trim();
                    item.SalesNo = salesId;
                    item.QtyReq = $(this).find('#rqty', this).val();
                    item.QtyInStock = $(this).find('#instock', this).val();
                    item.QtyToPurchase = $(this).find('#qtytopr', this).val();
                    item.WasteQty = $(this).find('#waste', this).val();
                    item.QtyAfterWast = $(this).find('#withwastqty', this).val();
                    item.MrsNo = MrsId;

                    if (item.WasteQty == "") {
                        alert("Waste Quantity Should Not be blank");
                        return;
                    }

                    //Save to check Table
                    $.ajax({
                        url: "/MaterialPlaning/InsertIntoMIS",
                        data: { wastQty: item.WasteQty, Afterwastqty: item.QtyAfterWast, salesNo: item.SalesNo, MrsNno: item.MrsNo, jobno: item.JobNo, bobno: item.BomNo, Code: item.Code, ProductlName: item.MatName, Type: item.Type, Capacity: item.Capacity, Model: item.Model, Color: item.Color, Qty: item.Qty, QtyReq: item.QtyReq, QtyInStock: item.QtyInStock, QtyToProduce: item.QtyToPurchase },
                        type: "POST",
                        ContentType: "application/json; charset=UTF-8",
                        success: function (result) {
                            $.ajax({
                                url: "/MaterialPlaning/UpdateStatus",
                                timeout: 20000,
                                data: { saleNo: item.SalesNo, code: ProCode, jobno: item.JobNo, bomno: item.BomNo },
                                type: "POST",
                                ContentType: "application/json; charset=UTF-8",
                                success: function () {
                                    count++
                                    if (count > 1)
                                        return;
                                    alert("Your Material Planning Id Is: " + item.MrsNo);

                                    location.href = "/MaterialPlaning/MIS";
                                },
                                error: function () {
                                    new PNotify({
                                        title: 'Error!',
                                        text: 'Something Went Wrong',
                                        type: 'error'
                                    });
                                }

                            });
                        },
                        error: function () {
                            new PNotify({
                                title: 'Error!',
                                text: 'Something Went Wrong',
                                type: 'error'
                            });
                        }

                    });
                });


                let jonno = $('.salesid').text().trim();
                let bomid = $('.bomid').text().trim();
                let code = $('.procode').text().trim();
                let proname = $('.proname').text().trim();
                let type = $('.type').text().trim();
                let capacity = $('.capacity').text().trim();
                let color = $('.color').text().trim();
                let model = $('.model').text().trim();
                let brand = $('.brand').text().trim();
                let qty = $('.qty').text().trim();
                $.ajax({
                    url: "/MaterialPlaning/InsertIntoCheckMat",
                    data: { jobno: jonno, bobno: bomid, Code: code, ProductlName: proname, Type: type, Capacity: capacity, Model: model, Color: color, Qty: qty, Brand: brand },
                    type: "POST",
                    ContentType: "application/json; charset=UTF-8",
                    success: function () {

                        //  window.open("/MaterialPlaning/MIS");
                        location.open("/MaterialPlaning/MIS")
                    },
                    error: function () {
                        new PNotify({
                            title: 'Error!',
                            text: 'Something Went Wrong',
                            type: 'error'
                        });
                    }

                });
            })
        })

    </script>
}