@model Capitaplus.Models.FinishedGood
@{
    ViewBag.Title = "Finishing Good";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create Finishing Good</h2>

@using (@Html.BeginForm("Edit", "FinishedGood"))
{
    <div class="form-group">
        <div class="container">
            <div class="row">
                <div class="col-lg-6">

                    <div class="form-group">
                        @Html.LabelFor(x => x.ProductName, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.ProductName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ProductName)

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.ShortProductName, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.ShortProductName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ShortProductName)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.ModelNo, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.ModelNo, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ModelNo)

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.CellType, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.CellType, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.CellType)

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Capacity, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.Capacity, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Capacity)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Color, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.Color, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Color)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.UOM, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.UOM, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.UOM)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(x => x.Stock, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.Stock, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Stock)
                    </div>
                </div>
                <div class="col-lg-6">

                    <div class="form-group">
                        @Html.LabelFor(x => x.ShortColorCode, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.ShortColorCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ShortColorCode)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Brand, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.Brand, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Brand)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.ShortBrandCode, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.ShortBrandCode, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ShortBrandCode)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.SAC, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.SAC, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.SAC)
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(x => x.MIN, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.MIN, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.MIN)
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(x => x.Max, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.Max, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Max)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.GST, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.GST, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.GST)
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.Rate, new { @class = "lbl" })
                        @Html.TextBoxFor(x => x.Rate, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Rate)
                    </div>

                    <br />
                    @Html.HiddenFor(c => c.Id)
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-lg btn-primary">Save</button>

                </div>
            </div>
        </div>


    </div>

}
@section scripts{
    @Scripts.Render("~/bundles/jqueryval")


}